//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbSystem_MarketEntities : DbContext
    {
        public dbSystem_MarketEntities()
            : base("name=dbSystem_MarketEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ciudades> ciudades { get; set; }
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Profesionales> Profesionales { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Ventas> Ventas { get; set; }
    
       
        public virtual int s_Insertar_Ventas(ObjectParameter idVentas, string numeroVentas, Nullable<System.DateTime> fecha, string estado, Nullable<int> idClientes)
        {
            var numeroVentasParameter = numeroVentas != null ?
                new ObjectParameter("numeroVentas", numeroVentas) :
                new ObjectParameter("numeroVentas", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var idClientesParameter = idClientes.HasValue ?
                new ObjectParameter("idClientes", idClientes) :
                new ObjectParameter("idClientes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("s_Insertar_Ventas", idVentas, numeroVentasParameter, fechaParameter, estadoParameter, idClientesParameter);
        }
    
        public virtual ObjectResult<s_buscar_registro_Result> s_buscar_registro(string texobuscar)
        {
            var texobuscarParameter = texobuscar != null ?
                new ObjectParameter("texobuscar", texobuscar) :
                new ObjectParameter("texobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<s_buscar_registro_Result>("s_buscar_registro", texobuscarParameter);
        }
    
        public virtual int s_Anular_Ventas(Nullable<int> idVentas)
        {
            var idVentasParameter = idVentas.HasValue ?
                new ObjectParameter("idVentas", idVentas) :
                new ObjectParameter("idVentas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("s_Anular_Ventas", idVentasParameter);
        }
    
        public virtual ObjectResult<s_buscar_profesionales_Result> s_buscar_profesionales(string textobuscar)
        {
            var textobuscarParameter = textobuscar != null ?
                new ObjectParameter("textobuscar", textobuscar) :
                new ObjectParameter("textobuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<s_buscar_profesionales_Result>("s_buscar_profesionales", textobuscarParameter);
        }
    
        public virtual ObjectResult<s_Buscar_Ventas_Result> s_Buscar_Ventas(string fechaInicial, string fechafinal)
        {
            var fechaInicialParameter = fechaInicial != null ?
                new ObjectParameter("fechaInicial", fechaInicial) :
                new ObjectParameter("fechaInicial", typeof(string));
    
            var fechafinalParameter = fechafinal != null ?
                new ObjectParameter("fechafinal", fechafinal) :
                new ObjectParameter("fechafinal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<s_Buscar_Ventas_Result>("s_Buscar_Ventas", fechaInicialParameter, fechafinalParameter);
        }
    
        public virtual int s_editar_Clientes(Nullable<int> idClientes, string ccoruc, string razonsocial, string direccion, string telefono, string correo, Nullable<int> idProfesionales, Nullable<int> idCiudades)
        {
            var idClientesParameter = idClientes.HasValue ?
                new ObjectParameter("idClientes", idClientes) :
                new ObjectParameter("idClientes", typeof(int));
    
            var ccorucParameter = ccoruc != null ?
                new ObjectParameter("ccoruc", ccoruc) :
                new ObjectParameter("ccoruc", typeof(string));
    
            var razonsocialParameter = razonsocial != null ?
                new ObjectParameter("razonsocial", razonsocial) :
                new ObjectParameter("razonsocial", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var idProfesionalesParameter = idProfesionales.HasValue ?
                new ObjectParameter("idProfesionales", idProfesionales) :
                new ObjectParameter("idProfesionales", typeof(int));
    
            var idCiudadesParameter = idCiudades.HasValue ?
                new ObjectParameter("idCiudades", idCiudades) :
                new ObjectParameter("idCiudades", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("s_editar_Clientes", idClientesParameter, ccorucParameter, razonsocialParameter, direccionParameter, telefonoParameter, correoParameter, idProfesionalesParameter, idCiudadesParameter);
        }
    
        public virtual int s_editar_profesioanles(Nullable<int> idprofesional, string ccprofesional, string nombres, string apellidos, string direccion, string telefono, string correo, Nullable<int> idciudades)
        {
            var idprofesionalParameter = idprofesional.HasValue ?
                new ObjectParameter("idprofesional", idprofesional) :
                new ObjectParameter("idprofesional", typeof(int));
    
            var ccprofesionalParameter = ccprofesional != null ?
                new ObjectParameter("ccprofesional", ccprofesional) :
                new ObjectParameter("ccprofesional", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var idciudadesParameter = idciudades.HasValue ?
                new ObjectParameter("idciudades", idciudades) :
                new ObjectParameter("idciudades", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("s_editar_profesioanles", idprofesionalParameter, ccprofesionalParameter, nombresParameter, apellidosParameter, direccionParameter, telefonoParameter, correoParameter, idciudadesParameter);
        }
    
        public virtual int s_editar_Usuarios(Nullable<int> idUsuarios, string usuario, string contraseña, string acceso, Nullable<int> idProfesionales)
        {
            var idUsuariosParameter = idUsuarios.HasValue ?
                new ObjectParameter("idUsuarios", idUsuarios) :
                new ObjectParameter("idUsuarios", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var accesoParameter = acceso != null ?
                new ObjectParameter("acceso", acceso) :
                new ObjectParameter("acceso", typeof(string));
    
            var idProfesionalesParameter = idProfesionales.HasValue ?
                new ObjectParameter("idProfesionales", idProfesionales) :
                new ObjectParameter("idProfesionales", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("s_editar_Usuarios", idUsuariosParameter, usuarioParameter, contraseñaParameter, accesoParameter, idProfesionalesParameter);
        }
    
        public virtual int s_eliminar_profesionales(Nullable<int> idprofesional)
        {
            var idprofesionalParameter = idprofesional.HasValue ?
                new ObjectParameter("idprofesional", idprofesional) :
                new ObjectParameter("idprofesional", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("s_eliminar_profesionales", idprofesionalParameter);
        }
    
        public virtual int s_eliminar_Usuarios(Nullable<int> idUsuarios)
        {
            var idUsuariosParameter = idUsuarios.HasValue ?
                new ObjectParameter("idUsuarios", idUsuarios) :
                new ObjectParameter("idUsuarios", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("s_eliminar_Usuarios", idUsuariosParameter);
        }
    
        public virtual int s_elimnar_Clientes(Nullable<int> idClientes)
        {
            var idClientesParameter = idClientes.HasValue ?
                new ObjectParameter("idClientes", idClientes) :
                new ObjectParameter("idClientes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("s_elimnar_Clientes", idClientesParameter);
        }
    
        public virtual ObjectResult<s_Generar_Comprobantes_Result> s_Generar_Comprobantes(Nullable<int> idVentas)
        {
            var idVentasParameter = idVentas.HasValue ?
                new ObjectParameter("idVentas", idVentas) :
                new ObjectParameter("idVentas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<s_Generar_Comprobantes_Result>("s_Generar_Comprobantes", idVentasParameter);
        }
    
        public virtual ObjectResult<s_Mostrar_Ventas_Result> s_Mostrar_Ventas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<s_Mostrar_Ventas_Result>("s_Mostrar_Ventas");
        }
    
        public virtual ObjectResult<spiniciarsesion_Result> spiniciarsesion(string usuario, string contraseña)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spiniciarsesion_Result>("spiniciarsesion", usuarioParameter, contraseñaParameter);
        }
    
        public virtual ObjectResult<s_mostrar_Usuarios_Result> s_mostrar_Usuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<s_mostrar_Usuarios_Result>("s_mostrar_Usuarios");
        }
    
        public virtual ObjectResult<s_mostrar_profesionales_Result> s_mostrar_profesionales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<s_mostrar_profesionales_Result>("s_mostrar_profesionales");
        }
    }
}
